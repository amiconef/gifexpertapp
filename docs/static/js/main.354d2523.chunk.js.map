{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCVnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,yFAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCJJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECLwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAhBAC,qBAAU,WAEPxB,EAASC,GACJwB,MAAK,SAAAC,GAGDH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAGGqB,EDnBwBK,CAAc1B,GAAhCa,EAAb,EAAQN,KAAYa,EAApB,EAAoBA,QAIpB,OAEI,cADA,CACA,sBACI,6BAAMpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aElBpBgB,EAAe,WAIxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KACA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OAEnB,aADA,CACC,EAAD,CACIA,SAAWA,GACLA,Y,MChBlC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.354d2523.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n//import { GifExpertApp } from '../GifExpertApp';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n     \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            < input\r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>    \r\n    )\r\n\r\n   \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;","export const getGifs = async( category ) => {\r\n       \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category ) }&limit=10&offset=0&rating=g&lang=es&api_key=GmuVVIsGt8VnQT3xfNAivTskS95T4xXC`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url }) => {\r\n    \r\n    //console.log({ id, title, url });\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n   \r\n    const { data:images,loading} = useFetchGifs( category );\r\n    // //usar una sola vez el fetch() y no se regenere el arreglo con las imagenes nuevamente\r\n    \r\n   \r\n    return (\r\n        //fragment, engloba varios componentes, a retornar.\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p className='animate__animated animate__flash'>Loading</p> }\r\n            \r\n            <div className=\"card-grid\">\r\n             {\r\n                images.map(img => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img} />\r\n                ))\r\n            }\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n       getGifs( category )\r\n           .then(imgs => {\r\n\r\n         \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n\r\n            })    \r\n    }, [category])\r\n\r\n\r\n    return state; //{data: [] , loading:true}\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n    \r\n    // const [categories, setCategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp </h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n           \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        //return <li key={category} >{category} </li>\r\n                        <GifGrid\r\n                            category={ category }\r\n                            key={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}